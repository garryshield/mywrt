name: GDQ

on:
  workflow_dispatch:
  push:
    paths:
      - "CHANGELOG.md"

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    strategy:
      fail-fast: false
      matrix:
        target: [t1, t2]

    name: Build ${{matrix.target}}

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Set Env
        run: |
          source "user/common/env"
          source "user/${{matrix.target}}/env"

          echo "DATE=${DATE}"                                   >> $GITHUB_ENV
          echo "REPO_URL=${REPO_URL}"                           >> $GITHUB_ENV
          echo "REPO_BRANCH=${REPO_BRANCH}"                     >> $GITHUB_ENV
          echo "MATRIX_ID=${DATE}-${{matrix.target}}"           >> $GITHUB_ENV

          cat $GITHUB_ENV

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -hT

      - name: Clone source code
        run: |
          git clone --depth 1 -b ${{env.REPO_BRANCH}} ${{env.REPO_URL}} openwrt
          tree -a -L 2 ./
          df -hT

      - name: hook a
        run: |
          source "user/common/hook.sh"
          hook_common_a
          source "user/${{matrix.target}}/hook.sh"
          hook_target_a

      - name: Update feeds
        run: |
          cd openwrt
          ./scripts/feeds update -a

      - name: Install feeds
        run: |
          cd openwrt
          ./scripts/feeds install -a
          ./scripts/feeds install -a

      - name: hook b
        run: |
          source "user/common/hook.sh"
          hook_common_b
          source "user/${{matrix.target}}/hook.sh"
          hook_target_b

      - name: Make config
        run: |
          cd openwrt
          make defconfig

      - name: Make download
        run: |
          cd openwrt
          make download -j$(nproc)
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          df -hT
          cd openwrt
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -hT
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: hook c
        run: |
          source "user/common/hook.sh"
          hook_common_c
          source "user/${{matrix.target}}/hook.sh"
          hook_target_c

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{env.DATE}}-${{matrix.target}}-${{github.run_number}}
          release_name: ${{env.DATE}}-${{matrix.target}}-${{github.run_number}}
          body: |
            ${{env.DATE}}-${{matrix.target}}-${{github.run_number}}
          draft: false
          prerelease: false

      - name: Upload firmware
        uses: actions/upload-artifact@v3
        with:
          path: ./openwrt/bin
          name: openwrt-firmware-${{matrix.target}}-${{github.run_number}}

      - name: Archive firmware
        uses: thedoctor0/zip-release@main
        with:
          directory: ./openwrt/bin
          filename: openwrt-firmware-${{matrix.target}}-${{github.run_number}}.zip

      - name: Release firmware
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./openwrt/bin/openwrt-firmware-${{matrix.target}}-${{github.run_number}}.zip
          asset_name: openwrt-firmware-${{matrix.target}}-${{github.run_number}}.zip
          asset_content_type: application/zip

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        continue-on-error: true
        with:
          retain_days: 1
          keep_minimum_runs: 3
